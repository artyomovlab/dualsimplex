% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DualSimplexSolver.R
\docType{class}
\name{DualSimplexObject}
\alias{DualSimplexObject}
\alias{DualSimplexSolver}
\title{DualSimplex Object.}
\format{
\code{\link{R6Class}} object.
}
\value{
Object of \code{\link{R6Class}} -- an interface to work with data.
}
\description{
The DualSimplex Object Class.
Provides an interface to perform:
sinkhorn transformation,
svd projection,
optimization of simplex corners (NMF solution).
}
\examples{
M <-  8000 # number of genes (rows)
N <-  200 # number of samples (columns)
K <-  3 # number of main components
sim <- create_simulation(n_genes = M, n_samples = N, n_cell_types = K, with_marker_genes = FALSE)
dso <- DualSimplexSolver$new()
dso$set_data(sim$data) # run Sinkhorn procedure
dso$project(K) # project to SVD space
dso$plot_projected("zero_distance",
                   "zero_distance",
                   with_solution = TRUE,
                   use_dims = list(2:3)) # visualize the projection
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{st}}{contain the "state" of the current object. (data, solution, projections etc..).}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DualSimplexSolver-set_data}{\code{DualSimplexSolver$set_data()}}
\item \href{#method-DualSimplexSolver-plot_mad}{\code{DualSimplexSolver$plot_mad()}}
\item \href{#method-DualSimplexSolver-basic_filter}{\code{DualSimplexSolver$basic_filter()}}
\item \href{#method-DualSimplexSolver-add_knn_distances_anno}{\code{DualSimplexSolver$add_knn_distances_anno()}}
\item \href{#method-DualSimplexSolver-add_density_anno}{\code{DualSimplexSolver$add_density_anno()}}
\item \href{#method-DualSimplexSolver-plot_svd}{\code{DualSimplexSolver$plot_svd()}}
\item \href{#method-DualSimplexSolver-plot_svd_history}{\code{DualSimplexSolver$plot_svd_history()}}
\item \href{#method-DualSimplexSolver-project}{\code{DualSimplexSolver$project()}}
\item \href{#method-DualSimplexSolver-plot_projection_diagnostics}{\code{DualSimplexSolver$plot_projection_diagnostics()}}
\item \href{#method-DualSimplexSolver-plot_distances_distribution}{\code{DualSimplexSolver$plot_distances_distribution()}}
\item \href{#method-DualSimplexSolver-distance_filter}{\code{DualSimplexSolver$distance_filter()}}
\item \href{#method-DualSimplexSolver-iterative_n_sigma_filter}{\code{DualSimplexSolver$iterative_n_sigma_filter()}}
\item \href{#method-DualSimplexSolver-iterative_density_filter}{\code{DualSimplexSolver$iterative_density_filter()}}
\item \href{#method-DualSimplexSolver-iterative_mahalanobis_filter}{\code{DualSimplexSolver$iterative_mahalanobis_filter()}}
\item \href{#method-DualSimplexSolver-run_umap}{\code{DualSimplexSolver$run_umap()}}
\item \href{#method-DualSimplexSolver-plot_projected}{\code{DualSimplexSolver$plot_projected()}}
\item \href{#method-DualSimplexSolver-init_solution}{\code{DualSimplexSolver$init_solution()}}
\item \href{#method-DualSimplexSolver-optim_solution}{\code{DualSimplexSolver$optim_solution()}}
\item \href{#method-DualSimplexSolver-default_optimization}{\code{DualSimplexSolver$default_optimization()}}
\item \href{#method-DualSimplexSolver-plot_error_history}{\code{DualSimplexSolver$plot_error_history()}}
\item \href{#method-DualSimplexSolver-finalize_solution}{\code{DualSimplexSolver$finalize_solution()}}
\item \href{#method-DualSimplexSolver-plot_negative_basis_change}{\code{DualSimplexSolver$plot_negative_basis_change()}}
\item \href{#method-DualSimplexSolver-plot_negative_proportions_change}{\code{DualSimplexSolver$plot_negative_proportions_change()}}
\item \href{#method-DualSimplexSolver-plot_solution_distribution}{\code{DualSimplexSolver$plot_solution_distribution()}}
\item \href{#method-DualSimplexSolver-set_display_dims}{\code{DualSimplexSolver$set_display_dims()}}
\item \href{#method-DualSimplexSolver-set_save_dir}{\code{DualSimplexSolver$set_save_dir()}}
\item \href{#method-DualSimplexSolver-get_save_dir}{\code{DualSimplexSolver$get_save_dir()}}
\item \href{#method-DualSimplexSolver-getset_save_dir}{\code{DualSimplexSolver$getset_save_dir()}}
\item \href{#method-DualSimplexSolver-save_state}{\code{DualSimplexSolver$save_state()}}
\item \href{#method-DualSimplexSolver-save_solution}{\code{DualSimplexSolver$save_solution()}}
\item \href{#method-DualSimplexSolver-load_state}{\code{DualSimplexSolver$load_state()}}
\item \href{#method-DualSimplexSolver-generate_summary}{\code{DualSimplexSolver$generate_summary()}}
\item \href{#method-DualSimplexSolver-get_data}{\code{DualSimplexSolver$get_data()}}
\item \href{#method-DualSimplexSolver-get_filtering_stats}{\code{DualSimplexSolver$get_filtering_stats()}}
\item \href{#method-DualSimplexSolver-get_n_cell_types}{\code{DualSimplexSolver$get_n_cell_types()}}
\item \href{#method-DualSimplexSolver-get_n_iters}{\code{DualSimplexSolver$get_n_iters()}}
\item \href{#method-DualSimplexSolver-get_negative_ratios}{\code{DualSimplexSolver$get_negative_ratios()}}
\item \href{#method-DualSimplexSolver-get_solution}{\code{DualSimplexSolver$get_solution()}}
\item \href{#method-DualSimplexSolver-get_ct_names}{\code{DualSimplexSolver$get_ct_names()}}
\item \href{#method-DualSimplexSolver-get_marker_genes}{\code{DualSimplexSolver$get_marker_genes()}}
\item \href{#method-DualSimplexSolver-get_V_row}{\code{DualSimplexSolver$get_V_row()}}
\item \href{#method-DualSimplexSolver-get_V_column}{\code{DualSimplexSolver$get_V_column()}}
\item \href{#method-DualSimplexSolver-clone}{\code{DualSimplexSolver$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-set_data"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-set_data}{}}}
\subsection{Method \code{set_data()}}{
Set data to the object.
In general it could be any matrix with names on columns and rows. Expression set will be created.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$set_data(
  data,
  gene_anno_lists = NULL,
  sample_anno_lists = NULL,
  max_sinkhorn_iterations = 20,
  max_dim = 50L,
  sinkhorn_tol = 1e-12,
  svd_method = "svd",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{input data matrix}

\item{\code{gene_anno_lists}}{named list of lists. Each sublist contains names of rows which should have TRUE value in annotaiton column.}

\item{\code{sample_anno_lists}}{named list of lists. Each sublist contains names of columns which should have TRUE value in annotation column.}

\item{\code{max_sinkhorn_iterations}}{number of sinkhorn iterations to perform.}

\item{\code{max_dim}}{maximum dimention we want the projection operation. It is passed to `calc_svd_ops` function.}

\item{\code{sinkhorn_tol}}{tolerance for Sinkhorn calculation. It is passed to `sinkhron_scale` function.}

\item{\code{svd_method}}{which SVD algorithm to use.}

\item{\code{...}}{additional arguments passed to function `run_svd`}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-plot_mad"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-plot_mad}{}}}
\subsection{Method \code{plot_mad()}}{
plot MAD distribution for the data
In general it could be any matrix with names on columns and rows. Expression set will be created.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$plot_mad(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{parameters to pass to plot_feature method.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-basic_filter"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-basic_filter}{}}}
\subsection{Method \code{basic_filter()}}{
Basic data filtering for gene expression datasets.
Removes selected genes, filters by mad
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$basic_filter(
  log_mad_gt = 0,
  remove_true_cols_default = NULL,
  remove_true_cols_additional = c(),
  keep_true_cols = c(),
  genes = T
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{log_mad_gt}}{log madthreshold to remove genes (we remove low mad genes).}

\item{\code{remove_true_cols_default}}{FALSE if tou don't want to use default gene names filter.}

\item{\code{remove_true_cols_additional}}{additional columns from annotation to use for "remove true" filter.}

\item{\code{keep_true_cols}}{columns from annotation where we should keep instances with true value.}

\item{\code{genes}}{true if want remove rows otherwise columns}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-add_knn_distances_anno"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-add_knn_distances_anno}{}}}
\subsection{Method \code{add_knn_distances_anno()}}{
Add additional distance annotation based on KNN distances to selected annotations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$add_knn_distances_anno(
  annotation_names_list = NULL,
  genes = T,
  k_neighbors = 20
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{annotation_names_list}}{names of annotation columns with TRUE/FALSE.}

\item{\code{genes}}{calculate for gene annotations or sample annotations.}

\item{\code{k_neighbors}}{a number of neighbors to calculate the distance on for the annotation}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-add_density_anno"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-add_density_anno}{}}}
\subsection{Method \code{add_density_anno()}}{
Add additional density annotation to points.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$add_density_anno(radius = NULL, genes = T)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{radius}}{radius to count neighbors within.}

\item{\code{genes}}{calculate for gene annotations or sample annotations.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-plot_svd"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-plot_svd}{}}}
\subsection{Method \code{plot_svd()}}{
Interface to plot svd
Will return the elbow plot of singular values.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$plot_svd(dims = self$st$dims)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dims}}{how many dimensions to plot}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
plot to work with
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-plot_svd_history"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-plot_svd_history}{}}}
\subsection{Method \code{plot_svd_history()}}{
Interface to plot svd history of filtering steps through the svd plot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$plot_svd_history(
  steps_sel = NULL,
  n_dims = NULL,
  cumulative = T,
  variance = T
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{steps_sel}}{selected filtering steps, list.}

\item{\code{n_dims}}{how many dimensions to plot}

\item{\code{cumulative}}{wether plot should be cumulative}

\item{\code{variance}}{plot variance explained}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
plot to work with
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-project"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-project}{}}}
\subsection{Method \code{project()}}{
Calculate svd projection for current data. Will perform SVD.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$project(n_cell_types)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n_cell_types}}{selected number of dimensions (K) to work with.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-plot_projection_diagnostics"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-plot_projection_diagnostics}{}}}
\subsection{Method \code{plot_projection_diagnostics()}}{
A set of plots to extimate the projection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$plot_projection_diagnostics()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-plot_distances_distribution"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-plot_distances_distribution}{}}}
\subsection{Method \code{plot_distances_distribution()}}{
Plot scatterplot of plane distance to zero distance for each point
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$plot_distances_distribution()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-distance_filter"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-distance_filter}{}}}
\subsection{Method \code{distance_filter()}}{
Filter points based on distance thresholds. (keep lower).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$distance_filter(
  plane_d_lt = NULL,
  zero_d_lt = NULL,
  genes = T
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{plane_d_lt}}{threshold for plane distance.}

\item{\code{zero_d_lt}}{threshold for zero distance.}

\item{\code{genes}}{TRUE if filter rows, otherwise columns.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-iterative_n_sigma_filter"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-iterative_n_sigma_filter}{}}}
\subsection{Method \code{iterative_n_sigma_filter()}}{
Iteratively filter by N sigma using all the features provided.
aplication of  n_sigma_filter <- function(eset, feature, n_sigma = 3, genes = T)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$iterative_n_sigma_filter(
  features = NULL,
  n_sigma = 3,
  max_filtering_iterations = 500,
  genes = T
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{features}}{feature names (columns of pData or fData) as a vector.}

\item{\code{n_sigma}}{number of sigmas to keep.}

\item{\code{max_filtering_iterations}}{maximum fitering iterations to be performed}

\item{\code{genes}}{TRUE if filter rows, otherwise columns.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-iterative_density_filter"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-iterative_density_filter}{}}}
\subsection{Method \code{iterative_density_filter()}}{
Iteratively filter by N sigma using all the features provided.
aplication of  n_sigma_filter <- function(eset, feature, n_sigma = 3, genes = T)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$iterative_density_filter(
  threshold = 0,
  max_filtering_iterations = 500,
  density_radius = NULL,
  genes = T
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{threshold}}{threshold to filter neighborhoods}

\item{\code{max_filtering_iterations}}{maximum fitering iterations to be performed}

\item{\code{density_radius}}{radius for density calculation.}

\item{\code{genes}}{TRUE if filter rows, otherwise columns.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-iterative_mahalanobis_filter"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-iterative_mahalanobis_filter}{}}}
\subsection{Method \code{iterative_mahalanobis_filter()}}{
Iteratively filter by N sigma using all the features provided simultaniously.
aplication of  n_sigma_filter <- function(eset, feature, n_sigma = 3, genes = T)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$iterative_mahalanobis_filter(
  features = NULL,
  n_sigma = 3,
  max_filtering_iterations = 500,
  genes = T
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{features}}{feature names (columns of pData or fData) as a vector.}

\item{\code{n_sigma}}{number of sigmas to keep.}

\item{\code{max_filtering_iterations}}{maximum fitering iterations to be performed}

\item{\code{genes}}{TRUE if filter rows, otherwise columns.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-run_umap"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-run_umap}{}}}
\subsection{Method \code{run_umap()}}{
Do UMAP transformation for current projected data in both spaces.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$run_umap(
  with_model = Sys.info()[["sysname"]] != "Darwin",
  neighbors_X = 50,
  neighbors_Omega = 10
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{with_model}}{specific umap model selection for Mac users. For Mac there is a known issue with this library.}

\item{\code{neighbors_X}}{parameter for UMAP.}

\item{\code{neighbors_Omega}}{parameter for UMAP.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-plot_projected"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-plot_projected}{}}}
\subsection{Method \code{plot_projected()}}{
Interface to plot points of the current object

 color_genes / color_samples can be:
- a set of names to be highlighted
- a vector of values, the same length as the number of genes
- a name of a column from annotation, default is zero_distance
Important note: ggplot only allows to either draw history or color all the points
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$plot_projected(
  color_genes = "zero_distance",
  color_samples = "zero_distance",
  use_dims = private$display_dims,
  with_legend = NULL,
  with_solution = TRUE,
  with_history = TRUE,
  wrap = T,
  show_plots = T,
  from_iter = 1,
  to_iter = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{color_genes}}{how to color genes (see description of method).}

\item{\code{color_samples}}{how to color samples (see description of method).}

\item{\code{use_dims}}{which dimensions to use (e.g. 2:3).}

\item{\code{with_legend}}{TRUE if want to add legends to plots.}

\item{\code{with_solution}}{TRUE if want to  add current solution points.}

\item{\code{with_history}}{TRUE if want to  add  solution history points/lines.}

\item{\code{wrap}}{FALSE if want to have two separated plots, not single one.}

\item{\code{show_plots}}{FALSE if don't want plots to be displayed.}

\item{\code{from_iter}}{starting point for history of solutions.}

\item{\code{to_iter}}{end point for history of solutions.}

\item{\code{...}}{any other params to be passed to plot_projected method.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-init_solution"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-init_solution}{}}}
\subsection{Method \code{init_solution()}}{
Initialize current solution
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$init_solution(strategy = "select_x", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{strategy}}{strategy to use for initialization. valid values are "select_x", "select_omega", "random" and "marker_means"}

\item{\code{...}}{any other params to be passed to initialization methods (e.g. marker genes)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-optim_solution"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-optim_solution}{}}}
\subsection{Method \code{optim_solution()}}{
Perform optimization for current solution
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$optim_solution(
  iterations = 10000,
  config = OPTIM_CONFIG_DEFAULT
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{iterations}}{number of steps to perform}

\item{\code{config}}{optimization config (result of optim_config method)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-default_optimization"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-default_optimization}{}}}
\subsection{Method \code{default_optimization()}}{
This is best starting point to run optimization
This is how we run optimization while performed comparison with other methods. you can use this method as a template for yourself
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$default_optimization(config = OPTIM_CONFIG_DEFAULT)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{optimization config (result of optim_config method)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-plot_error_history"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-plot_error_history}{}}}
\subsection{Method \code{plot_error_history()}}{
Plot errors log
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$plot_error_history()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-finalize_solution"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-finalize_solution}{}}}
\subsection{Method \code{finalize_solution()}}{
Finalize solution.
Return from projection to sinkhorn transformed matrices
Perform reverse sinkhorn to get original matrices W and H
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$finalize_solution()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-plot_negative_basis_change"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-plot_negative_basis_change}{}}}
\subsection{Method \code{plot_negative_basis_change()}}{
Interface to plot negativity changes in basis (Matrix W)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$plot_negative_basis_change()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-plot_negative_proportions_change"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-plot_negative_proportions_change}{}}}
\subsection{Method \code{plot_negative_proportions_change()}}{
Interface to plot negativity changes in coefficients (Matrix H)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$plot_negative_proportions_change()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-plot_solution_distribution"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-plot_solution_distribution}{}}}
\subsection{Method \code{plot_solution_distribution()}}{
Interface to plot solution distribution as histogramm by main component
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$plot_solution_distribution()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-set_display_dims"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-set_display_dims}{}}}
\subsection{Method \code{set_display_dims()}}{
set and remember which dimensions to use for plotting functions
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$set_display_dims(display_dims)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{display_dims}}{(e.g. 2:3, 3:4, NULL)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-set_save_dir"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-set_save_dir}{}}}
\subsection{Method \code{set_save_dir()}}{
set and remember direvtory to save model state
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$set_save_dir(new_dir_path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_dir_path}}{path to save model}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-get_save_dir"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-get_save_dir}{}}}
\subsection{Method \code{get_save_dir()}}{
get current save directory for the model
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$get_save_dir()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-getset_save_dir"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-getset_save_dir}{}}}
\subsection{Method \code{getset_save_dir()}}{
set and remember direvtory to save model state. returns directory name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$getset_save_dir(new_dir_path = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_dir_path}}{path to save model}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-save_state"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-save_state}{}}}
\subsection{Method \code{save_state()}}{
save model state to directory
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$save_state(save_dir = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{save_dir}}{path to save model}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-save_solution"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-save_solution}{}}}
\subsection{Method \code{save_solution()}}{
save current model solution (H and W) to separate tsv files
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$save_solution(save_dir = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{save_dir}}{path to save matrices}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-load_state"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-load_state}{}}}
\subsection{Method \code{load_state()}}{
load model from the specified directory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$load_state(input_dir = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_dir}}{path to load model from}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-generate_summary"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-generate_summary}{}}}
\subsection{Method \code{generate_summary()}}{
Generate automatically generated report for the method
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$generate_summary(
  save_dir = NULL,
  seurat_obj = NULL,
  with_animated_optim = F
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{save_dir}}{path to save report}

\item{\code{seurat_obj}}{seurat object to use for markers visualization}

\item{\code{with_animated_optim}}{TRUE to save gif with optimization process}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-get_data"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-get_data}{}}}
\subsection{Method \code{get_data()}}{
get current data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$get_data()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-get_filtering_stats"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-get_filtering_stats}{}}}
\subsection{Method \code{get_filtering_stats()}}{
get current filtering log.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$get_filtering_stats()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-get_n_cell_types"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-get_n_cell_types}{}}}
\subsection{Method \code{get_n_cell_types()}}{
get number of main components used (K)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$get_n_cell_types()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-get_n_iters"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-get_n_iters}{}}}
\subsection{Method \code{get_n_iters()}}{
get number optimization iterations performed
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$get_n_iters()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-get_negative_ratios"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-get_negative_ratios}{}}}
\subsection{Method \code{get_negative_ratios()}}{
get proportionality of negative elements for H and W
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$get_negative_ratios()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-get_solution"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-get_solution}{}}}
\subsection{Method \code{get_solution()}}{
get current solution
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$get_solution()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-get_ct_names"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-get_ct_names}{}}}
\subsection{Method \code{get_ct_names()}}{
get names for main components specified
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$get_ct_names()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-get_marker_genes"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-get_marker_genes}{}}}
\subsection{Method \code{get_marker_genes()}}{
get marker genes for current solution
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$get_marker_genes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-get_V_row"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-get_V_row}{}}}
\subsection{Method \code{get_V_row()}}{
Calculate V_row on the fly.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$get_V_row()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-get_V_column"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-get_V_column}{}}}
\subsection{Method \code{get_V_column()}}{
Calculate V_column on the fly.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$get_V_column()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DualSimplexSolver-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DualSimplexSolver-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DualSimplexSolver$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
